@page
@using ItTakesAVillage.Contracts
@using ItTakesAVillage.Models
@inject IGroupService _groupService
@model ItTakesAVillage.Pages.DinnerInvitationModel
@{
}

@if (Model.CurrentUser != null)
{
    <div class="d-flex align-items-center flex-column">
        <img class="mx-auto" src="img/matlag.png" />
        <h2 class="abrilFont text-center mt-2 mb-5">Matlag</h2>
    </div>
    <div class="blueBgColor p-5">
        <div class="container w-75">
            <div class="">
                <h4 class="abrilFont mb-3">Mina grupper</h4>
                @foreach (var group in Model.GroupsOfCurrentUser)
                {
                    <div class="accordion" id="notification-accordion">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="heading_@group.Id">
                                <button class="accordion-button collapsed blueBgColor"
                                        type="submit"
                                        data-bs-toggle="collapse"
                                        data-bs-target="#collapse_@group.Id"
                                        aria-expanded="false"
                                        aria-controls="collapse_@group.Id">
                                    <i class="bi bi-circle-fill pinkFontColor p-2"></i>
                                    <span class="fw-bold">@group.Name</span>
                                </button>
                            </h2>

                            <div id="collapse_@group.Id" class="accordion-collapse collapse blueBgColor" aria-labelledby="heading_@group.Id" data-bs-parent="#notification-accordion">
                                <div class="accordion-body">
                                    @{
                                        var members = await _groupService.GetMembers(group.Id);
                                        await Html.RenderPartialAsync("_MemberPartial", members);
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="w-50">

                <form method="post">
                    <h4 class="abrilFont mt-4 mb-3">Skapa ny matlagsinbjudan</h4>
                    <label class="form-label fw-bold mt-2">Vilken grupp?*</label>
                    <select class="form-control w-25 bg-transparent" asp-for="NewInvitation.GroupId" asp-items="ViewBag.GroupId">
                        <option disabled selected>Välj grupp</option>
                    </select>
                    <label class="form-label fw-bold mt-2">Vilket datum och tid?*</label>
                    <input required class="form-control bg-transparent" asp-for="NewInvitation.DateTime" value="@DateTime.Now.ToString("yyyy-MM-dd HH:mm", new System.Globalization.CultureInfo("sv-SE"))" />
                    <label class="form-label fw-bold mt-2">Vad ska du bjuda på?</label>
                    <input class="form-control bg-transparent" asp-for="NewInvitation.Course" />
                    <label class="form-label fw-bold mt-2">Var ska ni vara?</label>
                    <input class="form-control bg-transparent" asp-for="NewInvitation.Location" />
                    <label class="form-label fw-bold mt-2">Övrig information</label>
                    <textarea class="form-control bg-transparent" asp-for="NewInvitation.Message"></textarea>
                    <input type="submit" class="btn pinkBgColor fw-bold mt-2" value="Spara" />
                </form>
            </div>
        </div>
    </div>

    if (Model.Notifications.Any())
    {
        <div class="p-5">
            <div class="container w-75">
                <h4 class="abrilFont mb-3">På gång - matlag</h4>
                <div class="accordion" id="notification-accordion">
                    @foreach (var notification in Model.Notifications.Where(x => x.RelatedEvent is DinnerInvitation).OrderBy(x => x.RelatedEvent.DateTime))
                    {
                        var textstyle = notification.IsRead ? "" : "fw-bold";
                        <div class="accordion-item ">
                            <button class="accordion-button collapsed @textstyle"
                                    type="button"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#collapse_@notification.Id"
                                    aria-expanded="false"
                                    aria-controls="collapse_@notification.Id"
                                    onclick="handleAccordionClick(@notification.Id)">
                                <i class="bi bi-circle-fill pinkFontColor p-2"></i>
                                <span class="">@notification.RelatedEvent.DateTime.ToShortDateString() - @notification.Title</span>
                            </button>

                            <div id="collapse_@notification.Id" class="accordion-collapse collapse" aria-labelledby="heading_@notification.Id" data-bs-parent="#notification-accordion">
                                <div class="accordion-body">
                                    @if (notification.RelatedEvent is DinnerInvitation invitation)
                                    {
                                        await Html.RenderPartialAsync("_DinnerNotificationPartial", invitation);
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }


    <div class="row d-flex m-5">
        <blockquote class="blockquote">
            <h2 class="text-center abrilFont">"It takes a village to raise a child"</h2>
            <footer class="blockquote-footer text-center mt-1">Afrikanskt ordspråk</footer>
        </blockquote>

    </div>
}